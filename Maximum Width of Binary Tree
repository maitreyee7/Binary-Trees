 int widthOfBinaryTree(TreeNode* root) {
        if(root==NULL){
            return 0;
        }
        int a=0;
        queue<pair<TreeNode*,int>> q;
        q.push({root,0});
        while(!q.empty()){
            int s= q.size();
            int first,last;
            int sub= q.front().second;
            for(int i=0;i<s;i++){
                TreeNode* node=q.front().first;
                int cur_ind=q.front().second-sub;
                q.pop();

                if(i==0){
                    first= cur_ind;
                }
                if(i==s-1){
                    last=cur_ind;
                }
                if(node->left){
                    q.push({node->left, (long long)2*cur_ind +1});
                }
                 if(node->right){
                    q.push({node->right, (long long)2*cur_ind +2});
                }
            }
            a= max(a, last-first+1);
        }
        return a;
    }
};
