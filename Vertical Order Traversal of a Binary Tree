class Solution {
public:
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        vector<vector<int>> ans;
        if(root==NULL){
            return ans;
        }
        queue<pair<TreeNode*, pair<int,int>>> q;
        map<int,map<int, multiset<int>>> m;
        q.push({root,{0,0}});
        while(!q.empty()){

            auto a=q.front();
            q.pop();
        TreeNode* node= a.first;
        int x= a.second.first;
        int y=a.second.second;
        m[x][y].insert(node->val);
        if(node->left){
            q.push({node->left,{x-1,y+1}});
        }
        if(node->right){
            q.push({node->right,{x+1,y+1}});
        }
        }

        for(auto it:m){
            vector<int>col;
            for(auto jt:it.second){
                col.insert(col.end(), jt.second.begin(), jt.second.end());
            }
            ans.push_back(col);
        }
    return ans;
    }
};
